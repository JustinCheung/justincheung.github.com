<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>JC's Box</title><link href="http://web.zscbb.com/" rel="alternate"></link><link href="http://web.zscbb.com/feeds/redis.atom.xml" rel="self"></link><id>http://web.zscbb.com/</id><updated>2015-06-23T00:00:00+08:00</updated><entry><title>redis cluster 集群 安装 配置 详解</title><link href="http://web.zscbb.com/posts/2015/06/redis-cluster-ji-qun-an-zhuang-pei-zhi-xiang-jie/" rel="alternate"></link><updated>2015-06-23T00:00:00+08:00</updated><author><name>JustinCheung</name></author><id>tag:web.zscbb.com,2015-06-23:posts/2015/06/redis-cluster-ji-qun-an-zhuang-pei-zhi-xiang-jie/</id><summary type="html">
&lt;p&gt;Redis 集群是一个提供在多个Redis间节点间共享数据的程序集.redis3.0以前，只支持主从同步的，如果主的挂了，写入就成问题了。3.0出来后就可以很好帮我们解决这个问题。&lt;/p&gt;
&lt;p&gt;目前redis 3.0还不稳定，如果要用在生产环境中，要慎重。&lt;/p&gt;
&lt;h1 id="redis"&gt;一，redis服务器说明&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;192.168.10.219 6379  
192.168.10.219 6380  
192.168.10.219 6381

192.168.10.220 6382  
192.168.10.220 6383  
192.168.10.220 6384
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style="color: #800080;"&gt;&lt;strong&gt;要让集群正常运作至少需要三个主节点，不过在刚开始试用集群功能时， 强烈建议使用六个节点： 其中三个为主节点， 而其余三个则是各个主节点的从节点。所有用二台机器，开6个redis进程，模拟6台机器。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id="rubyrubygems"&gt;二，安装ruby,rubygems&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# yum -y install gcc openssl-devel libyaml-devel libffi-devel readline-devel zlib-devel gdbm-devel ncurses-devel gcc-c++ automake autoconf

# yum -y install ruby rubygems   //安装ruby rubygems

//换源  
# gem source -l  
# gem source --remove http://rubygems.org/  
# gem sources -a http://ruby.taobao.org/  
# gem source -l

# gem install redis --version 3.0.0  //安装gem_redis  
Successfully installed redis-3.0.0  
1 gem installed  
Installing ri documentation for redis-3.0.0...  
Installing RDoc documentation for redis-3.0.0...
&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="redis300"&gt;三，安装redis3.0.0&lt;/h1&gt;
&lt;h2 id="1redis"&gt;1，安装redis&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# wget http://download.redis.io/releases/redis-3.0.0.tar.gz  
# tar -xvzf redis-3.0.0.tar.gz  
# cd redis-3.0.0  
# make &amp;amp;&amp;amp; make install  
# cd src  
# cp redis-trib.rb /usr/local/bin

# mkdir /etc/redis  
# mkdir /var/log/redis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style="color: #800080;"&gt;&lt;strong&gt;上述操作要先在二台机器上面都操作好。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="2redis"&gt;2,配置redis&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@slave2 redis-3.0.0]#  vim redis.conf   //解压的根目录，有redis.conf,做以下修改  
port 6379  
pidfile /var/run/redis-6379.pid  
dbfilename dump-6379.rdb  
appendfilename "appendonly-6379.aof"  
cluster-config-file nodes-6379.conf  
cluster-enabled yes  
cluster-node-timeout 5000  
appendonly yes
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="3copy"&gt;3，copy配置文件，并修改端口&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# cp redis.conf /etc/redis/redis-6379.conf  
# cp redis.conf /etc/redis/redis-6380.conf  
# cp redis.conf /etc/redis/redis-6381.conf

# scp redis.conf 192.168.10.220:/etc/redis/redis-6382.conf  
# scp redis.conf 192.168.10.220:/etc/redis/redis-6383.conf  
# scp redis.conf 192.168.10.220:/etc/redis/redis-6384.conf

# sed -i "s/6379/6380/g" /etc/redis/redis-6380.conf  
# sed -i "s/6379/6381/g" /etc/redis/redis-6381.conf

# sed -i "s/6379/6382/g" /etc/redis/redis-6382.conf  
# sed -i "s/6379/6383/g" /etc/redis/redis-6383.conf  
# sed -i "s/6379/6384/g" /etc/redis/redis-6384.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style="color: #800080;"&gt;&lt;strong&gt;将配置文件分别copy到二台机器上，并替换端口：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# cat redis-6380.conf |awk '{if($0 !~ /^$/ &amp;amp;&amp;amp; $0 !~ /#/) {print $0}}' |grep 6380  
pidfile /var/run/redis-6380.pid  
port 6380  
dbfilename dump-6380.rdb  
appendfilename "appendonly-6380.aof"  
cluster-config-file nodes-6380.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style="color: #800080;"&gt;&lt;strong&gt;有5处修改端口的地方&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="4redis"&gt;4，启动并查看redis&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# redis-server /etc/redis/redis-6379.conf &amp;gt; /var/log/redis/redis-6379.log 2&amp;gt;&amp;amp;1 &amp;amp;  
# redis-server /etc/redis/redis-6380.conf &amp;gt; /var/log/redis/redis-6380.log 2&amp;gt;&amp;amp;1 &amp;amp;  
# redis-server /etc/redis/redis-6381.conf &amp;gt; /var/log/redis/redis-6381.log 2&amp;gt;&amp;amp;1 &amp;amp;

# redis-server /etc/redis/redis-6382.conf &amp;gt; /var/log/redis/redis-6382.log 2&amp;gt;&amp;amp;1 &amp;amp;  
# redis-server /etc/redis/redis-6383.conf &amp;gt; /var/log/redis/redis-6383.log 2&amp;gt;&amp;amp;1 &amp;amp;  
# redis-server /etc/redis/redis-6384.conf &amp;gt; /var/log/redis/redis-6384.log 2&amp;gt;&amp;amp;1 &amp;amp;

# netstat -tpnl |grep redis  
tcp        0      0 0.0.0.0:6379                0.0.0.0:*                   LISTEN      7298/redis-server *  
tcp        0      0 0.0.0.0:6380                0.0.0.0:*                   LISTEN      7299/redis-server *  
tcp        0      0 0.0.0.0:6381                0.0.0.0:*                   LISTEN      7304/redis-server *  
tcp        0      0 0.0.0.0:16379               0.0.0.0:*                   LISTEN      7298/redis-server *  
tcp        0      0 0.0.0.0:16380               0.0.0.0:*                   LISTEN      7299/redis-server *  
tcp        0      0 0.0.0.0:16381               0.0.0.0:*                   LISTEN      7304/redis-server *  
tcp        0      0 :::6379                     :::*                        LISTEN      7298/redis-server *  
tcp        0      0 :::6380                     :::*                        LISTEN      7299/redis-server *  
tcp        0      0 :::6381                     :::*                        LISTEN      7304/redis-server *  
tcp        0      0 :::16379                    :::*                        LISTEN      7298/redis-server *  
tcp        0      0 :::16380                    :::*                        LISTEN      7299/redis-server *  
tcp        0      0 :::16381                    :::*                        LISTEN      7304/redis-server *

[root@slave2 redis]# ll /etc/redis/  
总用量 156  
-rw-r--r-- 1 root root     0 4月  30 23:54 appendonly-6379.aof  
-rw-r--r-- 1 root root     0 5月   1 00:08 appendonly-6380.aof  
-rw-r--r-- 1 root root     0 5月   1 00:08 appendonly-6381.aof  
-rw-r--r-- 1 root root    18 5月   1 00:08 dump-6379.rdb  
-rw-r--r-- 1 root root    18 5月   1 00:08 dump-6380.rdb  
-rw-r--r-- 1 root root    18 5月   1 00:08 dump-6381.rdb  
-rw-r--r-- 1 root root   763 5月   1 00:08 nodes-6379.conf  
-rw-r--r-- 1 root root   763 5月   1 00:08 nodes-6380.conf  
-rw-r--r-- 1 root root   763 5月   1 00:08 nodes-6381.conf  
-rw-r--r-- 1 root root 41412 4月  30 23:30 redis-6379.conf  
-rw-r--r-- 1 root root 41412 4月  30 23:39 redis-6380.conf  
-rw-r--r-- 1 root root 41412 4月  30 23:39 redis-6381.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所有节点都启动成功，并不代表，他们就是集群了。&lt;/p&gt;
&lt;h1 id="_1"&gt;四，创建集群，并查看&lt;/h1&gt;
&lt;h2 id="1redis_1"&gt;1，创建redis集群&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# redis-trib.rb create --replicas 1 192.168.10.219:6379 192.168.10.219:6380 192.168.10.219:6381 192.168.10.220:6382 192.168.10.220:6383 192.168.10.220:6384
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="2redis_1"&gt;2，查看redis集群状态&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[root@slave2 redis]# redis-trib.rb check 192.168.10.219:6379  
Connecting to node 192.168.10.219:6379: OK  
Connecting to node 192.168.10.220:6384: OK  
Connecting to node 192.168.10.219:6381: OK  
Connecting to node 192.168.10.220:6383: OK  
Connecting to node 192.168.10.220:6382: OK  
Connecting to node 192.168.10.219:6380: OK  
&amp;gt;&amp;gt;&amp;gt; Performing Cluster Check (using node 192.168.10.219:6379)  
M: d40d9a367c24784b0336c7b80fb4c87337e2cba6 192.168.10.219:6379  
slots:5461-10922 (5462 slots) master  
1 additional replica(s)  
S: 5f00f163d0c0a540ea99daf004f55588a802327b 192.168.10.220:6384  
slots: (0 slots) slave  
replicates d40d9a367c24784b0336c7b80fb4c87337e2cba6  
S: b3b1a848987b5a87a06888e126d5c9b16f871ff5 192.168.10.219:6381  
slots: (0 slots) slave  
replicates d2eb5a8a77f87888792428aed4692dfb907e7a1d  
M: d2eb5a8a77f87888792428aed4692dfb907e7a1d 192.168.10.220:6383  
slots:10923-16383 (5461 slots) master  
1 additional replica(s)  
M: a8eafe8b19d6a28c034917da13a43ce1230fe870 192.168.10.220:6382  
slots:0-5460 (5461 slots) master  
1 additional replica(s)  
S: a87d207204a53ab599bf7f6ffb9d679d0eef4f25 192.168.10.219:6380 
slots: (0 slots) slave 
replicates a8eafe8b19d6a28c034917da13a43ce1230fe870  
[OK] All nodes agree about slots configuration.  
&amp;gt;&amp;gt;&amp;gt; Check for open slots...  
&amp;gt;&amp;gt;&amp;gt; Check slots coverage...  
[OK] All 16384 slots covered.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到这儿，redis集群就配置成功了&lt;/p&gt;
&lt;h1 id="redis_1"&gt;五，测试redis集群&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# redis-cli -c -p 6379 -h 192.168.10.219   //在219登录  
192.168.10.219:6379&amp;gt; set tank tank1    //设置测试值  
-&amp;gt; Redirected to slot [4407] located at 192.168.10.220:6382  
OK   //直接转向到220 6382端口，数据存到了220 6382，不过有点奇怪  
192.168.10.220:6382&amp;gt; get tank   //可以取到值  
"tank1"

[root@manage redis]# redis-cli -c -p 6383 -h 192.168.10.220  //220机器，6383端口  
192.168.10.220:6383&amp;gt; get tank  
-&amp;gt; Redirected to slot [4407] located at 192.168.10.220:6382  //直接转向220 6382端口  
"tank1"

[root@manage redis]# ps aux |grep redis //查看进程  
root      7310  0.2  0.9 137436  9724 pts/0    Sl   Apr30   0:09 redis-server *:6382 [cluster]  
root      7311  0.2  0.9 137436  9776 pts/0    Sl   Apr30   0:09 redis-server *:6383 [cluster]  
root      7316  0.2  0.9 137436  9944 pts/0    Sl   Apr30   0:10 redis-server *:6384 [cluster]  
root      7478  0.0  0.0 103256   812 pts/0    S+   00:56   0:00 grep redis

[root@manage redis]# kill -9 7310  //关闭220 6382端口，看数据会不会丢失

[root@slave2 redis]# redis-trib.rb check 192.168.10.219:6379  //查看集群情况，任何接口都行  
Connecting to node 192.168.10.219:6379: OK  
Connecting to node 192.168.10.220:6384: OK  
Connecting to node 192.168.10.219:6381: OK  
Connecting to node 192.168.10.220:6383: OK  
Connecting to node 192.168.10.219:6380: OK  
&amp;gt;&amp;gt;&amp;gt; Performing Cluster Check (using node 192.168.10.219:6379)  
M: d40d9a367c24784b0336c7b80fb4c87337e2cba6 192.168.10.219:6379 
slots:5461-10922 (5462 slots) master  
1 additional replica(s)  
S: 5f00f163d0c0a540ea99daf004f55588a802327b 192.168.10.220:6384 
slots: (0 slots) slave  
replicates d40d9a367c24784b0336c7b80fb4c87337e2cba6  
S: b3b1a848987b5a87a06888e126d5c9b16f871ff5 192.168.10.219:6381  
slots: (0 slots) slave  
replicates d2eb5a8a77f87888792428aed4692dfb907e7a1d  
M: d2eb5a8a77f87888792428aed4692dfb907e7a1d 192.168.10.220:6383     slots:10923-16383 (5461 slots) master  
1 additional replica(s)  
M: a87d207204a53ab599bf7f6ffb9d679d0eef4f25 192.168.10.219:6380  
slots:0-5460 (5461 slots) master  
0 additional replica(s)  
[OK] All nodes agree about slots configuration.  
&amp;gt;&amp;gt;&amp;gt; Check for open slots...  
&amp;gt;&amp;gt;&amp;gt; Check slots coverage...  
[OK] All 16384 slots covered.  //变成，三主二从了

[root@slave2 redis]# redis-cli -c -p 6379 -h 192.168.10.219    //219登录  
192.168.10.219:6379&amp;gt; get tank  
-&amp;gt; Redirected to slot [4407] located at 192.168.10.219:6380   //数据被转到了6380节点了  
"tank1"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;经测试，集群是可用的。&lt;/p&gt;</summary><category term="Web"></category><category term="redis"></category><category term="Writting"></category></entry></feed>