<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>JC's Box</title><link href="http://www.zscbb.com/" rel="alternate"></link><link href="http://www.zscbb.com/feeds%5Call.atom.xml" rel="self"></link><id>http://www.zscbb.com/</id><updated>2014-04-22T00:00:00+08:00</updated><entry><title>GitHub个人博客创建以及配置过程(连载中。。。)</title><link href="http://www.zscbb.com/posts/2014/04/githubge-ren-bo-ke-chuang-jian-yi-ji-pei-zhi-guo-cheng-lian-zai-zhong/" rel="alternate"></link><updated>2014-04-22T00:00:00+08:00</updated><author><name>JustinCheung</name></author><id>tag:www.zscbb.com,2014-04-22:posts/2014/04/githubge-ren-bo-ke-chuang-jian-yi-ji-pei-zhi-guo-cheng-lian-zai-zhong/</id><summary type="html">
&lt;h1 id="_1"&gt;前言&lt;/h1&gt;
&lt;p&gt;    将近一周的折腾时间之后终于把我的博客给搭起来了。由于对pelican提供的主题（根据&lt;a href="http://http://docs.getpelican.com/en/3.3.0/"&gt;pelican文档&lt;/a&gt;提示"themes are created using &lt;a href="http://http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt; templates"）不是很满意。所以就花去大量时间去改写主题以及测试。但是本人对于设计不是很了解，以至于走了很多的弯路。最后在网上看到有一个很好的主题pelican-elegant,正如其名字那样，这是一款高雅的主题，介于这么高大上的主题,并且对于具体怎么设置的除了官方文档外没有什么好的指导文章，所以我觉得有必要介绍一下。&lt;/p&gt;
&lt;h1 id="1github"&gt;1.在GitHub上申请账号创建工程&lt;/h1&gt;
&lt;p&gt;    GitHub被誉为“程序员的Facebook”，如果你还没有&lt;a href="http://www.github.com"&gt;GitHub&lt;/a&gt;账号，那就先去注册一个。&lt;/p&gt;
&lt;h2 id="11github"&gt;1.1注册GitHub&lt;/h2&gt;
&lt;p&gt;    关于注册我就不多说了，这个只用根据提示一步一步的设置就好了。在这里贴上一张注册页面的图。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="\images\注册.PNG"/&gt;&lt;/p&gt;
&lt;h2 id="12github"&gt;1.2在GitHub上创建仓库&lt;/h2&gt;
&lt;p&gt;    现在恭喜你有了GitHub的账号了，接下来就需要新建一个Repository（仓库）。如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="\images\NewRepository.PNG"/&gt;&lt;/p&gt;
&lt;p&gt;然后进入一个Repository的配置页面。如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="\images\SetRepository.PNG"/&gt;&lt;/p&gt;
&lt;p&gt;    我的仓库之前已经建立过了，所以提示“名字已经被使用了”，你可以根据自己的喜好随意设置仓库名。之后的设置默认就可以了。最后“&lt;strong&gt;Create Repository&lt;/strong&gt;”。好了，现在我们就有一个仓库了。但是这个仓库还没有域名，接下来我们要为这个仓库设置一个域名。&lt;/p&gt;
&lt;p&gt;在仓库页面的左侧有个“ &lt;strong&gt;Settings&lt;/strong&gt; ”选项，选进去。   在“ &lt;strong&gt;GitHub Pages&lt;/strong&gt; ”这栏（我因为已经创建过页面了所以有提示" &lt;strong&gt;Your site is published at ......&lt;/strong&gt; "），点击“ &lt;strong&gt;Automatic Page Generator&lt;/strong&gt; ”，接下来几步一路continue就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="\images\GitHubPages.PNG"/&gt;&lt;/p&gt;
&lt;p&gt;    现在你可以休息一下，也可以先接着往下看。因为GitHub Pages第一次配置之后，大概要十分钟才能为它分配域名成功。好了，闲话少说，我们继续本地配置。&lt;/p&gt;
&lt;h1 id="2pelicangit"&gt;2.安装pelican和git等工具&lt;/h1&gt;
&lt;p&gt;    GitHub Pages是静态网页，所以我们所写的网页不能直接放上去。也不能像“ &lt;strong&gt;Wordpress&lt;/strong&gt; ”那样通过后台来添加博文。所以我们需要一个工具来将写好的文章和模板一起来生成一个静态网站。这个工具就是pelican。Peelican官方文档上是这么说的，“ &lt;strong&gt;Pelican is a static site generator, written in Python, that requires no database or server-side logic.&lt;/strong&gt; ”具体的文档，你可以在&lt;a href="http://blog.getpelican.com/"&gt;http://blog.getpelican.com/&lt;/a&gt;上深入研究。好了，我们现在不用太深入纠结。&lt;/p&gt;
&lt;h2 id="21pip"&gt;2.1安装pip&lt;/h2&gt;
&lt;p&gt;    Pip是一个为了方便安装和管理Python包的一个工具，通俗的的讲就是一个应用管理中心（官方给出的解释是“ &lt;strong&gt;A tool for installing and managing Python packages.&lt;/strong&gt; ”）。&lt;/p&gt;
&lt;p&gt;    如果你的python是2.X版本的，你需要安装pip。但是3.X版本的似乎不需要安装pip了。具体需不需要安装，你可以在Python的安装目录下的Scripts的文件夹中看看有没有pip。好了，如果你没有pip那就来配置一下吧。&lt;/p&gt;
&lt;p&gt;    打开终端，输入下边的代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//python-distribute.org/distribute_setup.py  &lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;distribute_setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;

&lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//raw.github.com/pypa/pip/master/contrib/get-pip.py  &lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;    OK，现在pip已经安装成功了，如果你用的是window系统，那你还需要将Python目录下的Scripts放入环境变量中。&lt;/p&gt;
&lt;h2 id="22pelican"&gt;2.2安装pelican&lt;/h2&gt;
&lt;p&gt;    哈哈，现在我们有了pip，就开始配置pelican和一些必要的Python Packages了。闲言少叙，书接上文。&lt;/p&gt;
&lt;p&gt;    接下来我们需要下载pelican、markdown以及beautifulsoup4等Python Packages。你只需要在终端中输入下边代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;beautifulsoup4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="23-git"&gt;2.3 配置git&lt;/h2&gt;
&lt;p&gt;    Git怎么安装的在这里不进行赘述了。只是简单地介绍一下配置Git。&lt;/p&gt;
&lt;p&gt;    参考了GitHub的配置指南，设置好用户名和邮箱（这里的邮箱用的是你注册GitHub的那个邮箱）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s"&gt;"Your Name Here"&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="s"&gt;"your_email@example.com"&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;simple&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;安装ssh公钥&lt;/strong&gt;:用你在注册github时用的Email生成一个ssh公钥私钥对:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keygen&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;rsa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="s"&gt;"your_email@example.com"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Enter passphrase (empty for no passphrase): 输入你在github注册时使用的密码
Enter same passphrase again: 再输一次&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;    然后会看到公钥和私钥分别被保存为id_rsa和id_rsa.pub，后者正是我们需要的。打开github网页，在账户设置（Account settings）中找到SSH keys项目，点击添加SSH key(Add SSH key)，把idrsa.pub中的内容复制到网页中的key里面。到此git配置成功！&lt;/p&gt;
&lt;h1 id="3"&gt;3.配置博客&lt;/h1&gt;
&lt;p&gt;    现在开始创建Blog了，创建一个Blog目录并且用命令pelican-quickstart创建一个博客。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;pelican&lt;/span&gt;&lt;span class="na"&gt;-quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="31pelican-elegant"&gt;3.1配置pelican-elegant模板&lt;/h2&gt;
&lt;h2 id="32"&gt;3.2配置插件&lt;/h2&gt;
&lt;h2 id="33"&gt;3.3开始写博客&lt;/h2&gt;
&lt;h1 id="_2"&gt;后记&lt;/h1&gt;</summary><category term="Web"></category><category term="GitHub"></category><category term="Writting"></category></entry></feed>